/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-12 01:51:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import static poly.util.CmmUtil.nvl;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/view/user/top.jsp", Long.valueOf(1598881748000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("static poly.util.CmmUtil.nvl");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- top start -->\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");

	
	String user_name = nvl((String)session.getAttribute("user_name"));


      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-light navbar-expand-lg navbar-fixed white no-background bootsnav\" style=\"background-color:grey;\">\r\n");
      out.write("\t<!-- Start Top Search -->\r\n");
      out.write("\t<div class=\"top-search\">\r\n");
      out.write("\t\t<div class=\"contianer\">\r\n");
      out.write("\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-serach\"></i></span>\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n");
      out.write("\t\t\t\t<span class=\"input-group-addon close-search\" onClick=\"JavaScript:search();\"><i class=\"fa fa-times\">검색</i>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End Top Search -->\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<!-- Start Atribute Navigation -->\r\n");
      out.write("\t\t<div class=\"attr-nav\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t");
if(user_name.isEmpty()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/user/userLogin.do\" style=\"color:#2b2b2b;\">\r\n");
      out.write("\t\t\t\t\t\t\tsign in\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t");
}else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/user/logOut.do\" style=\"color:#2b2b2b;\">");
      out.print(user_name );
      out.write("님 Sign Out </a>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- End Atribute Navigation -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End Side Menu -->\r\n");
      out.write("\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- top end -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- ajax start -->\r\n");
      out.write("\t<div style=\"display: inline-block; margin:0;\">\r\n");
      out.write("\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t<input type=\"text\" placeholder=\"이름\" name=\"user_name\" id=\"user_name\" style=\"height: 40px !important;\"/>\r\n");
      out.write("\t\t\t<input type=\"button\" onClick=\"JavaScript:search();\" value=\"검색\" />\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- ajax end -->\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction search(){\r\n");
      out.write("\t\t//alert(\"test\");\r\n");
      out.write("\t\tvar user_name = $('#user_name').val();\r\n");
      out.write("\t\t//alert(\"user_name : \"+user_name);\r\n");
      out.write("\t\tif( $('#user_name').val()==\"\"){\r\n");
      out.write("\t\t\t$('#user_name').focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tconsole.log(\"user_name : \" +user_name);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '/user/userSearchList.do',\r\n");
      out.write("\t\t\ttype : 'post',\r\n");
      out.write("\t\t\tdata : {name :user_name}, //Controller에 보낼  key: value\r\n");
      out.write("\t\t\tdataType:'json',\r\n");
      out.write("\t\t\tsuccess : function(data) { //성공시\r\n");
      out.write("\t\t\t\tvar resHTML ='';\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tif(data.length==0) {\r\n");
      out.write("\t\t\t\t\talert(\"값없음\");\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"trow\" style=\"display: table-row;\">';\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"ajax_ddiv_content_box\">검색 결과가 없습니다.</div>';\r\n");
      out.write("\t\t\t\t\tresHTML += '</div>';\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfor( var i=0; i<data.length;i++) {\r\n");
      out.write("\t\t\t\t\talert(\"값 있음\");\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"trow\" style=\"display: table-row;\">';\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"div_content_box\">'\r\n");
      out.write("\t\t\t\t\t\t+ 'user_id : '\r\n");
      out.write("\t\t\t\t\t\t+ data[i].user_id + '</div>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"div_content_box\">'\r\n");
      out.write("\t\t\t\t\t\t+ 'user_name : '\r\n");
      out.write("\t\t\t\t\t\t+ data[i].user_name + '</div>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"div_content_box\">'\r\n");
      out.write("\t\t\t\t\t\t+ 'reg_dt : '\r\n");
      out.write("\t\t\t\t\t\t+ data[i].reg_dt + '</div>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<div class=\"div_content_box\">'\r\n");
      out.write("\t\t\t\t\t\t+ 'reg_id : '\r\n");
      out.write("\t\t\t\t\t\t+ data[i].reg_id + '</div>'\r\n");
      out.write("\t\t\t\t\t\t+ '===================';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$('#resContainer').html(resHTML); //HTML에 결과 추가\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
