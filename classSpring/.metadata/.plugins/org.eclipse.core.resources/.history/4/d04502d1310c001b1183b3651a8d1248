package poly.service.impl;

import java.util.Iterator;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Service;

import poly.dto.MovieDTO;
import poly.persistance.mapper.IMovieMapper;
import poly.service.IFoodService;
import poly.util.CmmUtil;
import poly.util.DateUtil;

@Service("FoodService")
public class FoodService implements IFoodService{

	// 로그 파일 생성 및 로그 출력을 위한 log4j 프레임워크의 자바 객체
	private Logger log = Logger.getLogger(this.getClass());
	
	@Resource(name="MovieMapper")
	private IMovieMapper movieMapper;
	
	/* JSOUP 라이브러리를 통한 CGV 영화 순위 정보가져오기 */
	
	@Override
	public int getMovieInfoFromWEB() throws Exception {
		
		log.info(this.getClass().getName() + ".getMovieInfoFromWEB start!");
		
		int res =0; // 크롤링 결과(0 보다 크면 성공)
		
		//CGV 영화 순위 정보 가져올 사이트 주소
		String url = "http://www.cgv.co.kr/movies/";
		
		// JSOUP 라이브러리를 통해 사이트 접속되면, 그 사이트의 전체 HTML 소스 저장할 변수
		Document doc = null; //
		
		//사이트 접속(https 보안상 안됨)
		doc = Jsoup.connect(url).get();
		
		Elements element = doc.select("div.sect-movie-chart");
		
		Iterator<Element> movie_rank = element.select("strong.rank").iterator(); //영화순위
		Iterator<Element> movie_name = element.select("strong.title").iterator(); // 영화이름
		Iterator<Element> movie_reserve = element.select("strong.percent span").iterator(); //영화 예메율
		Iterator<Element> score = element.select("span.percent").iterator(); //점수
		Iterator<Element> open_day = element.select("span.txt-info").iterator(); //개봉일
		
		MovieDTO pDTO = null;
		
		//수집된 데이터 DB에 저장하기
		while(movie_rank.hasNext()) {
			pDTO = new MovieDTO(); //수집된 영화정보를 DTO에 저장하기 위해 메모리에 올리기
			
			//수집시간을 기본키(pk)로 사용
			pDTO.setRank_check_time(DateUtil.getDateTime("yyyyMMdd24hmmss"));
			log.info(DateUtil.getDateTime("yyyyMMdd24hmmss"));
			
			String rank = CmmUtil.nvl(movie_rank.next().text()).trim();
			pDTO.setMovie_rank(rank.substring(3, rank.length()));
			
			pDTO.setMovie_nm(CmmUtil.nvl(movie_name.next().text()).trim());
			
			pDTO.setMovie_reserve(CmmUtil.nvl(movie_reserve.next().text()).trim());
			
			pDTO.setScore(CmmUtil.nvl(score.next().text()).trim());
			
			pDTO.setOpen_day(CmmUtil.nvl(open_day.next().text()).trim());
			
			pDTO.setReg_id("admin");
			
			res += movieMapper.InsertMovieInfo(pDTO);
			
		}
		
		log.info(this.getClass().getName() + "getMovieInfoFromWEB end!");
		
		return res;
	}
	

}
